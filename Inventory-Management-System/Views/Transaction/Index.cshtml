@model List<Transaction>

@{
    int iterator = 1;
}

@{
    var topSellingProducts = ViewBag.TopSellingProducts as List<TopSellingProduct>;
    var topEmployees = ViewBag.TopEmployees as List<TopEmployee>;
    
}

<div class="container mt-5">
    <div class="container p-0" style="margin-right: 0; margin-left: 0;">
        <div class="card p-3 shadow-sm">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h4 class="text-primary fw-bold" style="font-size: 30px;">Transactions</h4>
                <div class="align-items-center mb-3" style="padding: 25px 13px 0px; justify-content: right; gap: 20px; display: flex;">
                    <form id="deleteForm" method="post" action="/Transaction/Delete" onsubmit="return validateSelection()">
                        <input type="hidden" name="selectedIds" value="" id="selectedIdsField" />
                        <button type="button" id="deleteButton" class="btn btn-danger" style="display: none;"
                                data-bs-toggle="modal" data-bs-target="#confirmationModal">
                            Delete Selected
                        </button>
                    </form>

                    <a href="@Url.Action("ExportToExcel", "Transaction")" class="btn btn-primary">Export to Excel</a>
                    <a href="/Transaction/Add" class="btn btn-primary">+ New Transaction</a>
                </div>
            </div>


            <hr class="mb-4" style="background-color: #f9f9f9; height: 1px; margin-top: -2px;" />

            <div class="d-flex justify-content-between align-items-center mb-3" style="margin: 10px 0px;">
                <div class="dropdown">
                    <button class="btn btn-light me-2 dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-funnel me-1"></i>Status
                    </button>

                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="submitStatusFilter('')">All Levels</a></li>
                        <li><a class="dropdown-item" href="#" onclick="submitStatusFilter('Safe')">Safe</a></li>
                        <li><a class="dropdown-item" href="#" onclick="submitStatusFilter('Low')">Low</a></li>
                    </ul>
                    <button class="btn btn-light me-2" id="datepicker-btn">
                        <i class="bi bi-calendar"></i>
                    </button>

                    <input type="text" class="form-control d-none" id="datepicker-input" readonly>

                    <form asp-action="" asp-controller="Transaction" method="get" id="filterForm" class="d-none">
                        <input type="hidden" name="status" id="selectedStatus" />
                    </form>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-hover text-center">
                    <thead>
                        <tr>
                            <th><input type="checkbox" id="selectAll" onchange="toggleSelectAll(this)" /></th>
                            <th>ID</th>
                            <th>Date</th>
                            <th>Transaction Type</th>
                            <th>Total Price</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model)
                        {
                            <tr onclick="toggleCheckbox(this)">
                                <td><input type="checkbox" class="product-checkbox" name="selectedIds" value="@transaction.ID" onclick="event.stopPropagation();" /></td>
                                <td>@iterator</td>
                                <td>@transaction.Date</td>
                                <td>@transaction.Type</td>
                                <td>@transaction.TotalPrice.ToString("C")</td>
                                <td>
                                    <a href="" class="btn btn-outline-secondary btn-sm">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                </td>
                            </tr>
                            iterator++;
                        }
                    </tbody>
                </table>
            </div>
            @*

            <!-- Top Selling Products Section -->
            <div class="container mt-4">
                <div class="row justify-content-end">
                    <div class="col-md-4 col-sm-6 mb-4">
                        <!-- Added margin bottom for spacing -->
                        <div class="card shadow-sm border-primary">
                            <!-- Changed border color -->
                            <div class="card-body p-3">
                                <h6 class="card-title text-center fw-bold text-primary">Top Selling Products</h6> <!-- Added color -->
                                <hr class="my-2" style="border-color: #007bff;" /> <!-- Custom hr color -->
                                <table class="table table-sm table-borderless text-center mb-0">
                                    <thead class="table-primary">
                                        <!-- Added background color -->
                                        <tr>
                                            <th scope="col">Product ID</th>
                                            <th scope="col">Product Name</th>
                                            <th scope="col">Quantity</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (topSellingProducts != null && topSellingProducts.Count > 0)
                                        {
                                            foreach (var product in topSellingProducts)
                                            {
                                                <tr>
                                                    <td>@product.ProductId</td>
                                                    <td>@product.ProductName</td>
                                                    <td>@product.TotalQuantity</td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="3">No top-selling products available.</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 mb-4">
                        <!-- Added margin bottom for spacing -->
                        <div class="card shadow-sm border-success">
                            <!-- Changed border color -->
                            <div class="card-body p-3">
                                <h6 class="card-title text-center fw-bold text-success">Top Employees</h6> <!-- Added color -->
                                <hr class="my-2" style="border-color: #28a745;" /> <!-- Custom hr color -->
                                <table class="table table-sm table-borderless text-center mb-0">
                                    <thead class="table-success">
                                        <!-- Added background color -->
                                        <tr>
                                            <th scope="col">Employee ID</th>
                                            <th scope="col">Employee Name</th>
                                            <th scope="col">Total Sales</th> <!-- Corrected spelling -->
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (topEmployees != null && topEmployees.Count > 0)
                                        {
                                            foreach (var employee in topEmployees)
                                            {
                                                <tr>
                                                    <td>@employee.EmpId</td>
                                                    <td>@employee.EmpName</td>
                                                    <td>@employee.TotalSells.ToString("C")</td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="3">No top employees available.</td> <!-- Corrected message -->
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            *@

            <style>
                .card {
                    border-radius: 12px; /* Add rounded corners */
                    transition: transform 0.2s; /* Add transition for hover effect */
                }

                .table th, .table td {
                    vertical-align: middle; /* Center align content */
                }

                .table-primary, .table-success {
                    background-color: rgba(0, 123, 255, 0.1) !important; /* Light background for thead */
                }

                    .table-primary th, .table-success th {
                        background-color: #007bff !important; /* Darker header background */
                        color: white; /* Text color */
                    }

                    .table-primary tr:hover, .table-success tr:hover {
                        background-color: rgba(0, 123, 255, 0.2); /* Highlight row on hover */
                    }

                hr {
                    margin: 0; /* Reset margin */
                }
            </style>




            <div class="modal fade" id="confirmationModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Confirm Deletion</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">Are you sure you want to delete the selected Transaction?</div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function submitStatusFilter(status) {
            document.getElementById('selectedStatus').value = status;
            document.getElementById('filterForm').submit();
        }

        function toggleSelectAll(source) {
            const checkboxes = document.querySelectorAll('.product-checkbox');
            checkboxes.forEach(checkbox => checkbox.checked = source.checked);
            toggleDeleteButton();
        }

        function toggleCheckbox(row) {
            const checkbox = row.querySelector('.product-checkbox');
            checkbox.checked = !checkbox.checked;
            toggleDeleteButton();
        }

        function toggleDeleteButton() {
            const anyChecked = document.querySelectorAll('.product-checkbox:checked').length > 0;
            document.getElementById('deleteButton').style.display = anyChecked ? 'block' : 'none';
        }

        function validateSelection() {
            const selectedIds = Array.from(document.querySelectorAll('.product-checkbox:checked'))
                .map(checkbox => checkbox.value);

            if (selectedIds.length === 0) {
                alert("Please select at least one product to delete.");
                return false;
            }

            // Set the selected IDs in the hidden input field.
            document.getElementById('selectedIdsField').value = selectedIds.join(',');
            return true;
        }

        document.getElementById('confirmDelete').addEventListener('click', () => {
            const selectedIds = Array.from(document.querySelectorAll('.product-checkbox:checked'))
                .map(checkbox => checkbox.value);

            // Set the selected IDs in the hidden input field.
            document.getElementById('selectedIdsField').value = selectedIds.join(',');

            // Submit the form.
            document.getElementById('deleteForm').submit();
        });

        $(document).ready(function () {
            // Initialize the datepicker.
            $('#datepicker-input').datepicker({
                format: 'yyyy-mm-dd',
                autoclose: true,
                todayHighlight: true
            });

            // Show the datepicker when the button is clicked.
            $('#datepicker-btn').on('click', function () {
                $('#datepicker-input').datepicker('show');
            });

            // Handle the date selection event.
            $('#datepicker-input').on('changeDate', function (e) {
                console.log('Selected date:', e.format()); // Logs the selected date.
            });
        });

    </script>

    @if (TempData["PdfPath"] != null)
    {
        <script>
            window.onload = function () {
                const pdfPath = '@TempData["PdfPath"]';
                // Trigger PDF download
                const link = document.createElement('a');
                link.href = pdfPath;
                link.download = pdfPath.split('/').pop(); // Extract file name
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                // Redirect after a short delay to ensure download starts
                setTimeout(() => {
                    window.location.href = '/';
                }, 1000); // 1 second delay
            };
        </script>
    }

</div>

<style>
    .card {
        border-radius: 8px;
    }
</style>
